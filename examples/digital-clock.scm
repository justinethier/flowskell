(define (range n)
    (if (> n 0)
        (append (range (- n 1)) (list n))
        '(0)))
(define numbers
    (map (lambda (n)
        (load-texture (string-append "examples/img/number-" (number->string n) ".png"))
        )
    (range 9)))
(define (draw-number f)
    (let ((n (% (floor f) 10))
          (r (- f (floor f))))
        (push)
        (texture 0)
        ; (draw-grid)
        (rotate (* (max (* (- r 0.75) 4.0) 0) 90) x-axis)
        (push)
            (translate (vector 0 0 1))
            (texture (list-ref numbers n))
            (draw-plane)
        (pop)
        (push)
            (texture (list-ref numbers (% (+ n 1) 10)))
            (translate (vector 0 1 0))
            (rotate -90 x-axis)
            (draw-plane)
        (pop)
        (pop)
    ))
(define (every-frame)
    (scale 0.2)
    (texture (list-ref numbers 2))
    (rotate (* 10 (sin (secs))) y-axis)
    (let ((c (secs)))
        (translate (vector -4 0 0))
        (draw-number (/ c 10000))
        (translate (vector 2 0 0))
        (draw-number (/ c 1000))
        (translate (vector 2 0 0))
        (draw-number (/ c 100))
        (translate (vector 2 0 0))
        (draw-number (/ c 10))
        (translate (vector 2 0 0))
        (draw-number c)
    ))
    
